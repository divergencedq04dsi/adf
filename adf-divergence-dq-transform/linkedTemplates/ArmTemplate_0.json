{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-divergence-dq-transform"
		},
		"InputBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'InputBlob'"
		},
		"TransformationDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TransformationDatabase'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/InputBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('InputBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformationDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('TransformationDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DerivedColumn')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "InvoicesWithBalanceContactFullName"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InovicesVendorsLineItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "InovicesVendorsLineItems"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InvoiceData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "InputBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Invoices1.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "InvoiceID",
						"type": "String"
					},
					{
						"name": "VendorID",
						"type": "String"
					},
					{
						"name": "InvoiceNumber",
						"type": "String"
					},
					{
						"name": "InvoiceDate",
						"type": "String"
					},
					{
						"name": "InvoiceTotal",
						"type": "String"
					},
					{
						"name": "PaymentTotal",
						"type": "String"
					},
					{
						"name": "CreditTotal",
						"type": "String"
					},
					{
						"name": "TermsID",
						"type": "String"
					},
					{
						"name": "InvoiceDueDate",
						"type": "String"
					},
					{
						"name": "PaymentDate",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/InputBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InvoiceLineItemsCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "InputBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "InvoiceLineItems.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "InvoiceID",
						"type": "String"
					},
					{
						"name": "InvoiceSequence",
						"type": "String"
					},
					{
						"name": "AccountNo",
						"type": "String"
					},
					{
						"name": "InvoiceLineItemAmount",
						"type": "String"
					},
					{
						"name": "InvoiceLineItemDescription",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/InputBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InvoiceLineItemsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "InvoiceLineItems"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InvoicesTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Invoices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaidIvnocies')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "PaidIvnocies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/StateSummary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "StateSummary"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Top3InvoicesForVendor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Top3InvoicesForVendor"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnionInvoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "UnionInvoices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnpaidInvoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "UnpaidInvoices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VendorSummary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "VendorSummary"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VendorTermsSummary')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "VendorTermsSummary"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VendorsCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "InputBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Vendors.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "VendorID",
						"type": "String"
					},
					{
						"name": "VendorName",
						"type": "String"
					},
					{
						"name": "VendorAddress1",
						"type": "String"
					},
					{
						"name": "VendorAddress2",
						"type": "String"
					},
					{
						"name": "VendorCity",
						"type": "String"
					},
					{
						"name": "VendorState",
						"type": "String"
					},
					{
						"name": "VendorZipCode",
						"type": "String"
					},
					{
						"name": "VendorPhone",
						"type": "String"
					},
					{
						"name": "VendorContactLName",
						"type": "String"
					},
					{
						"name": "VendorContactFName",
						"type": "String"
					},
					{
						"name": "DefaultTermsID",
						"type": "String"
					},
					{
						"name": "DefaultAccountNo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/InputBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VendorsTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Vendors"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VendorsWithoutInvoices')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "VendorsWithoutInvoices"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/VendorsWithoutInvoicesExist')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TransformationDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "VendorsWithoutInvoicesExist"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TransformationDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DerivedColumn')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "InvoicesTable",
								"type": "DatasetReference"
							},
							"name": "ReadInvoices"
						},
						{
							"dataset": {
								"referenceName": "VendorsTable",
								"type": "DatasetReference"
							},
							"name": "ReadVendors"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DerivedColumn",
								"type": "DatasetReference"
							},
							"name": "DerivedColumn"
						}
					],
					"transformations": [
						{
							"name": "JoinInvoicesVendors"
						},
						{
							"name": "AddBalanceContactFullName"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tInvoiceID as integer,\n\t\tVendorID as integer,\n\t\tInvoiceNumber as string,\n\t\tInvoiceDate as date,\n\t\tInvoiceTotal as float,\n\t\tPaymentTotal as float,\n\t\tCreditTotal as float,\n\t\tTermsID as string,\n\t\tInvoiceDueDate as date,\n\t\tPaymentDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ReadInvoices\nsource(output(\n\t\tVendorID as integer,\n\t\tVendorName as string,\n\t\tVendorAddress1 as string,\n\t\tVendorAddress2 as string,\n\t\tVendorCity as string,\n\t\tVendorState as string,\n\t\tVendorZipCode as string,\n\t\tVendorPhone as string,\n\t\tVendorContactLName as string,\n\t\tVendorContactFName as string,\n\t\tDefaultTermsID as integer,\n\t\tDefaultAccountNo as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ReadVendors\nReadInvoices, ReadVendors join(ReadInvoices@VendorID == ReadVendors@VendorID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinInvoicesVendors\nJoinInvoicesVendors derive(OutstandingBalance = InvoiceTotal-PaymentTotal-CreditTotal,\n\t\tContactFullName = VendorContactLName + ', ' + VendorContactFName) ~> AddBalanceContactFullName\nAddBalanceContactFullName select(mapColumn(\n\t\tInvoiceID,\n\t\tVendorID = ReadInvoices@VendorID,\n\t\tInvoiceNumber,\n\t\tInvoiceDate,\n\t\tInvoiceTotal,\n\t\tPaymentTotal,\n\t\tCreditTotal,\n\t\tTermsID,\n\t\tInvoiceDueDate,\n\t\tPaymentDate,\n\t\tVendorName,\n\t\tOutstandingBalance,\n\t\tContactFullName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> DerivedColumn"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InvoicesTable')]",
				"[concat(variables('factoryId'), '/datasets/VendorsTable')]",
				"[concat(variables('factoryId'), '/datasets/DerivedColumn')]"
			]
		}
	]
}